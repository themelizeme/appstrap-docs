I"l<h2 id="gulp-setup-and-tasks-documentation">Gulp Setup and Tasks Documentation</h2>

<p>This documentation outlines how Gulp is used in the project and provides an overview of the key Gulp tasks. You can use Gulp to automate your development workflow and build production-ready files for deployment.</p>

<p>The main <code class="language-plaintext highlighter-rouge">gulpfile.js</code> file imports tasks from <code class="language-plaintext highlighter-rouge">./gulp</code>, each task can be run individually but this is not required using the 2 main Gulp tasks listed below.</p>

<p>If you’re new to build processes and Gulp do not fear it’s rarely more complex than running a few commands and you’re site is ready to develop. Plus we have plenty of customisation examples for you to follow.</p>

<h3 id="1-install-dependencies">1) Install dependencies</h3>

<p>Before using Gulp, ensure you’ve installed all necessary dependencies:</p>

<figure class="highlight"><pre><code class="language-ssh" data-lang="ssh"><span class="k">yarn</span> install</code></pre></figure>

<p>Once installed, you’ll see a new directory called <code>./node_modules</code> which contains all the code dependencies needed to build your theme.</p>

<p>You can now start running Gulp tasks using the following commands.</p>

<h3 id="2-create-a-new-project">2) Create a new project</h3>

<p>As of AppStrap 4.x you can now create unlimited projects within the theme all with there own different source code (/src) and configurations (config.PROJECT.js) and keep them as separate projects and sites.</p>

<p>NOTE: Using projects is our recommended approach to using the theme although if you are not interested in future updates and just want to use the theme as a starting point for your own development then you can skip this step. This will mean to directly edit the files within ./src and your compile HTML, CSS &amp; Javascript will be compiled into the root ./dist directory.</p>

<p>To create a new project simply run:</p>

<figure class="highlight"><pre><code class="language-ssh" data-lang="ssh"><span class="k">yarn</span> gulp create-project --name=YOURPROJECTNAME</code></pre></figure>

<p><code class="language-plaintext highlighter-rouge">YOURPROJECTNAME</code> should be a machine name without spaces and special characters ie. <code class="language-plaintext highlighter-rouge">themelize_me</code> or <code class="language-plaintext highlighter-rouge">appstrap_theme</code>.</p>

<p>When the command is successful you’ll see a summary of the new project like below:</p>

<figure class="highlight"><pre><code class="language-ssh" data-lang="ssh"><span class="k">yarn</span> gulp create-project --name=YOURPROJECTNAME</code></pre></figure>

<p>Your new project directory is now created with <code class="language-plaintext highlighter-rouge">./projects/YOURPROJECTNAME</code> with the following structure:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">/dist</code>: Contains production-ready files after running yarn gulp build.</li>
  <li><code class="language-plaintext highlighter-rouge">/src</code>: Source files for the project, organized into js, scss, html, and assets folders. These are the files you will edit during your project development.</li>
  <li><code class="language-plaintext highlighter-rouge">config.PROJECT_NAME.js</code>: The project-specific configuration file that overrides global settings.</li>
</ul>

<h3 id="2-gulp-tasks-overview">2) Gulp Tasks Overview</h3>

<p>Gulp tasks automate different parts of your workflow, such as compiling SCSS, optimizing JavaScript, and preparing files for deployment. The main commands you’ll focus on are:</p>

<h3 id="a-yarn-gulp">A. <code class="language-plaintext highlighter-rouge">yarn gulp</code></h3>

<p>This command runs the primary development tasks. It compiles your SCSS files into CSS, processes JavaScript files, and handles HTML compilation. It also watches for any file changes and uses BrowserSync to automatically refresh the browser, making it ideal for live development.</p>

<figure class="highlight"><pre><code class="language-ssh" data-lang="ssh"><span class="k">yarn</span> gulp --project=YOURPROJECTNAME</code></pre></figure>

<h3 id="b-yarn-gulp-build">B. <code class="language-plaintext highlighter-rouge">yarn gulp build</code></h3>

<p>The <code class="language-plaintext highlighter-rouge">yarn gulp build</code> command prepares your files for production. It performs all the tasks from the development workflow but also adds additional steps to clean out unused assets and optimize the output.</p>

<ul>
  <li><strong>SCSS Compilation</strong>: Converts SCSS into optimized, minified CSS files.</li>
  <li><strong>JavaScript Processing</strong>: Minifies and optimizes your JavaScript files.</li>
  <li><strong>Unused Asset Cleanup</strong>: Identifies and removes any unused assets or CSS.</li>
  <li><strong>Build Output</strong>: The production-ready files are stored in the <code class="language-plaintext highlighter-rouge">dist</code> folder and can be uploaded to a web hosting service like <a href="https://www.hostinger.com">Hostinger</a>, an ideal choice for hosting static websites.</li>
</ul>

<figure class="highlight"><pre><code class="language-ssh" data-lang="ssh"><span class="k">yarn</span> gulp build --project=YOURPROJECTNAME</code></pre></figure>

<p>Both <code class="language-plaintext highlighter-rouge">yarn gulp</code> and <code class="language-plaintext highlighter-rouge">yarn gulp build</code> will create a new <code class="language-plaintext highlighter-rouge">./dist</code> or <code class="language-plaintext highlighter-rouge">./projects/YOURPROJECTNAME/dist</code> folder which contains your compile HTML, .css, .js files and assets. You don’t ever need to edit files within the <code class="language-plaintext highlighter-rouge">./dist</code> or <code class="language-plaintext highlighter-rouge">./projects/YOURPROJECTNAME/dist</code> folders.</p>

<p>These commands also start BrowserSync so once the required tasks have completely your browser should open and render your site at <code class="language-plaintext highlighter-rouge">http://localhost:3004/</code></p>

<p>To come out of Gulp simply type “Command” + “c” on Mac or “Control” + “c” on Windows.</p>

<h3 id="next-steps">Next Steps</h3>

<p>Now you have a new project setup and a development environment running you can <a href="/get-started/2-config-customisation">start to customise your project config</a> via the <code class="language-plaintext highlighter-rouge">config.PROJECT.js</code> file within your project or for non-project based sites <code class="language-plaintext highlighter-rouge">./config.custom.js</code></p>

:ET